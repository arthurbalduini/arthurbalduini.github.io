{"version":3,"sources":["assets/infinity-monkey-01.jpg","assets/neylixo.gif","modules/Layout/index.tsx","modules/Home/pages/index.tsx","modules/NavBarItem/components/index.tsx","modules/NavBar/constants/index.tsx","modules/NavBar/components/index.tsx","modules/About/pages/index.tsx","modules/Random/constants/index.tsx","modules/Random/components/index.tsx","modules/Random/pages/index.tsx","router.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Layout","children","className","Home","item1","useRef","item2","useEffect","TweenMax","from","x","duration","ease","Power2","easeOut","ref","e","NavBarItem","props","to","link","pageName","routes","title","ToolBar","href","alt","src","monkeyLogo","map","element","About","neymarStats","key","value","NeymarBlock","stat","neylixo","Random","Routes","basename","path","exact","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8HAAAA,EAAOC,QAAU,IAA0B,gD,mBCA3CD,EAAOC,QAAU,IAA0B,qC,yUCS5BC,G,YAJqB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrC,OAAO,yBAAKC,UAHa,UAGmBD,K,eCkC/BE,EAjCE,WACf,IAAIC,EAAkCC,mBAClCC,EAAkCD,mBAOtC,OALAE,qBAAU,WACRC,IAASC,KAAKL,EAAO,CAAEM,GAAI,IAAKC,SAAU,EAAGC,KAAMC,IAAOC,UAC1DN,IAASC,KAAKH,EAAO,CAAEI,EAAG,IAAKC,SAAU,EAAGC,KAAMC,IAAOC,YACxD,IAGD,kBAAC,EAAD,KACE,yBAAKZ,UAbgB,QAcnB,yBAAKA,UAAS,UAdK,OAcL,WACZ,wBACEa,IAAK,SAACC,GACJZ,EAAQY,IAFZ,0BAOA,wBACED,IAAK,SAACC,GACJV,EAAQU,IAFZ,kCClBGC,G,YAAoC,SAACC,GAChD,OACE,kBAAC,IAAD,CAAMhB,UAAS,YAAeiB,GAAID,EAAME,MACtC,2BAAIF,EAAMG,aCZHC,EAAS,CACpB,CACEC,MAAO,OACPH,KAAM,KAER,CACEG,MAAO,QACPH,KAAM,UAER,CACEG,MAAO,eACPH,KAAM,Y,iBCgBKI,MAnBf,WACE,OACE,gCACE,6BACE,yBAAKtB,UANc,YAOjB,uBAAGuB,KAAK,KACN,yBAAKC,IAAI,cAAcC,IAAKC,OAE9B,yBAAK1B,UAAS,UAVG,WAUH,YACXoB,EAAOO,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,CAAYT,SAAUS,EAAQP,MAAOH,KAAMU,EAAQV,eCFlDW,G,MAVD,WACZ,OACE,kBAAC,EAAD,KACE,yBAAK7B,UALgB,SAMnB,wECRK8B,EAAyC,CACpD,CACEC,IAAK,wBACLC,MAAO,kCAET,CACED,IAAK,UACLC,MAAO,kBAET,CACED,IAAK,kBACLC,MAAO,cAET,CACED,IAAK,6BACLC,MAAO,kB,yBCQIC,EAlBK,WAClB,OACE,yBAAKjC,UAJkB,gBAKpB8B,EAAYH,KAAI,SAACO,GAChB,OACE,yBAAKlC,UAAS,UAPG,eAOH,WACZ,2BACE,2BAAIkC,EAAKH,IAAT,KACCG,EAAKF,WAKd,yBAAKhC,UAAU,OAAOyB,IAAKU,IAASX,IAAI,wBCG/BY,G,MAhBA,WACb,OACE,kBAAC,EAAD,KACE,yBAAKpC,UALgB,eAMnB,gGAGA,kBAAC,EAAD,MACA,uBAAGuB,KAAK,sKAAR,aCGOc,MAXf,WACE,OACE,kBAAC,IAAD,CAAYC,SAAS,KACnB,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWxC,IACjC,kBAAC,IAAD,CAAOsC,KAAK,SAASC,OAAK,EAACC,UAAWZ,IACtC,kBAAC,IAAD,CAAOU,KAAK,UAAUC,OAAK,EAACC,UAAWL,MCD9BM,MARf,WACE,OACE,yBAAK1C,UAAU,OACb,kBAAC,EAAD,QCKc2C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.bad27219.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/infinity-monkey-01.687e1ca2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/neylixo.c6975517.gif\";","import React, { FC } from \"react\";\nimport \"./index.css\";\n\nconst componentClassname = \"layout\";\n\nconst Layout: FC<React.ReactNode> = ({ children }) => {\n  return <div className={componentClassname}>{children}</div>;\n};\n\nexport default Layout;\n","import React, { FC, useRef, useEffect } from \"react\";\nimport \"./index.css\";\nimport Layout from \"../../Layout\";\nimport { TweenMax, Power2 } from \"gsap\";\n\nconst componentClassname = \"home\";\n\nconst Home: FC = () => {\n  let item1: HTMLHeadingElement | any = useRef();\n  let item2: HTMLHeadingElement | any = useRef();\n\n  useEffect(() => {\n    TweenMax.from(item1, { x: -900, duration: 3, ease: Power2.easeOut });\n    TweenMax.from(item2, { x: 900, duration: 3, ease: Power2.easeOut });\n  }, []);\n\n  return (\n    <Layout>\n      <div className={componentClassname}>\n        <div className={`${componentClassname}__test`}>\n          <h1\n            ref={(e) => {\n              item1 = e;\n            }}\n          >\n            Em construção...\n          </h1>\n          <h1\n            ref={(e) => {\n              item2 = e;\n            }}\n          >\n            Aguarde, mas não muito.\n          </h1>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./index.css\";\n\ninterface navBarProps {\n  pageName: string;\n  link: string;\n}\n\nexport const NavBarItem: React.FC<navBarProps> = (props) => {\n  return (\n    <Link className={`page-name`} to={props.link}>\n      <p>{props.pageName}</p>\n    </Link>\n  );\n};\n","export const routes = [\n  {\n    title: \"Home\",\n    link: \"/\",\n  },\n  {\n    title: \"About\",\n    link: \"/about\",\n  },\n  {\n    title: \"Random Stuff\",\n    link: \"/random\",\n  },\n];\n","import React from \"react\";\nimport \"./index.css\";\nimport { NavBarItem } from \"../../NavBarItem/components\";\nimport { routes } from \"../constants\";\nimport monkeyLogo from \"../../../assets/infinity-monkey-01.jpg\";\n\nconst componentClassname = \"tool-bar\";\n\nfunction ToolBar() {\n  return (\n    <header>\n      <nav>\n        <div className={componentClassname}>\n          <a href='/'>\n            <img alt='monkey-logo' src={monkeyLogo} />\n          </a>\n          <div className={`${componentClassname}__items`}>\n            {routes.map((element) => (\n              <NavBarItem pageName={element.title} link={element.link} />\n            ))}\n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n}\n\nexport default ToolBar;\n","import React from \"react\";\nimport \"./index.css\";\nimport Layout from \"../../Layout\";\n\nconst componentClassname = \"about\";\n\nconst About = () => {\n  return (\n    <Layout>\n      <div className={componentClassname}>\n        <h1>Contact me: arthurbalduini@gmail.com</h1>\n      </div>\n    </Layout>\n  );\n};\n\nexport default About;\n","import { NeymarStatsInterfaceArray } from \"../interfaces\";\n\nexport const neymarStats: NeymarStatsInterfaceArray = [\n  {\n    key: \"Salário do Neymar:\",\n    value: \"€ 36,8 milhões por ano\",\n  },\n  {\n    key: \"Um ano:\",\n    value: \"525600 minutos\",\n  },\n  {\n    key: \"Tempo caído:\",\n    value: \"14 minutos\",\n  },\n  {\n    key: \"Dinheiro ganho no chão:\",\n    value: \"€ 980,21\",\n  },\n];\n","import React from \"react\";\nimport { neymarStats } from \"../constants\";\nimport \"./index.css\";\nimport neylixo from \"../../../assets/neylixo.gif\";\n\nconst componentClassname = \"neymar-block\";\n\nconst NeymarBlock = () => {\n  return (\n    <div className={componentClassname}>\n      {neymarStats.map((stat: any) => {\n        return (\n          <div className={`${componentClassname}__item`}>\n            <p>\n              <b>{stat.key} </b>\n              {stat.value}\n            </p>\n          </div>\n        );\n      })}\n      <img className='lixo' src={neylixo} alt='Flowers in Chania' />\n    </div>\n  );\n};\n\nexport default NeymarBlock;\n","import React from \"react\";\nimport NeymarBlock from \"../components\";\nimport \"./index.css\";\nimport Layout from \"../../Layout\";\n\nconst componentClassname = \"random-page\";\n\nconst Random = () => {\n  return (\n    <Layout>\n      <div className={componentClassname}>\n        <h1>\n          Quanto o Neymar ganhou para fingir faltas durante a copa de 2018\n        </h1>\n        <NeymarBlock />\n        <a href='https://www.rts.ch/sport/football/international/coupe-du-monde-de-la-fifa/9691910-fifa-coupe-du-monde-2018-les-roulades-de-neymar-ont-coute-14-minutes-de-jeu.html'>\n          Fonte\n        </a>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Random;\n","import React from \"react\";\nimport { Route, HashRouter } from \"react-router-dom\";\nimport Home from \"./modules/Home/pages\";\nimport ToolBar from \"./modules/NavBar/components\";\nimport About from \"./modules/About/pages\";\nimport Random from \"./modules/Random/pages\";\n\nfunction Routes() {\n  return (\n    <HashRouter basename='/'>\n      <ToolBar />\n      <Route path='/' exact component={Home} />\n      <Route path='/about' exact component={About} />\n      <Route path='/random' exact component={Random} />\n    </HashRouter>\n  );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport \"./App.css\";\nimport Routes from \"./router\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}